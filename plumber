#!/bin/sh
PLDIR=/usr/local/etc/plumber

# Load up the clipboard
clip() {
	printf '%s\n' "$1" | xcmenu -ic
}

# Workaround until we have a filesystem based browser
fetch() {
	local link tmp
	if test -f "$1"; then
		link="$1"
	else
		clip "$1"
		link=`mktemp`
		curl -Lsk "$1" -o "$link" &
	fi
	printf '%b\n' "$link"
}


# Fire off the action
handle() {
	local input
	while read -r input; do
		case "$input" in
			browse) browse 	"$1" &
					exit 0 ;;
			play)   play   	"`fetch "$1"`" &
					exit 0 ;;
			view)   imv		"`fetch "$1"`" &
					exit 0 ;;
			docs)   zathura "`fetch "$1"`" &
					exit 0 ;;
			edit)   edit    "`fetch "$1"`" &
					exit 0 ;;
			hear)   mpv 		      "$1" &
					clip "$1"
					exit 0 ;;
			man)    /usr/local/share/dsearch/man "$1" &
					exit 0 ;;
			godoc)  /usr/local/share/dsearch/godoc "$1" &
					exit 0 ;;
			search) dsearch "!g $1" &
					exit 0 ;;
			wiki)   dsearch "!w $1" &
					exit 0 ;;
		esac
	done
	printf "$input $1" > ~/mime_issues
	clip "$1"
}

check_manpage() {
	query=`printf "$1" | sed 's/[^a-zA-Z0-9:/_-].*//'`
	whatis "$query" 2>/dev/null && printf "man\n"
}

menu() {
	printf '%s\n' "search" "wiki" "man" "godoc" "stream" | dmenu -l 5 -p "Query: $1"
}

# In testing, this outputs a correct mime
mime() {
	file -bL --mime-type "$1" | sed 's/cannot open.*//' &
	content-type "$1" 2>/dev/null &
	check_manpage "$1" &
}

# Match mimetype with action to be taken
parse() {
	while read -r input; do 
		awk -v r="$input" '$0 ~ r { print $2 }' "$PLDIR/${input%\/*}" 2>/dev/null &
		case "$input" in
			search) printf "search\n" ;;
			godoc)  printf "godoc\n"  ;;
			wiki)   printf "wiki\n"   ;;
			man)    printf "man\n"    ;;
			stream) printf "hear\n"   ;;
		esac
	done
}

## Main

# Read stdin or flag
test -n "$1" && input="$1" || read -r input
# Test for special cases
test -n "$input" || exit 0

if test -f "$XDG_CONFIG_HOME/plumber/special"; then
	"$XDG_CONFIG_HOME/plumber/special" "$input" || exit 0
fi

# Ugly! Will write something to read from stdin and err on no values.
mime "$input" | (grep . || menu "$input") | parse | handle "$input"
